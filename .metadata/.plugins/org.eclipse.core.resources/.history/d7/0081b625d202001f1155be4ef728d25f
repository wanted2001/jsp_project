package com.ezen.test.service;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import com.ezen.test.domain.MemberVO;
import com.ezen.test.repository.MemberDAO;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
@RequiredArgsConstructor
public class MemberServiceImpl implements MemberService{
	
	private MemberDAO mdao;
	
	final BCryptPasswordEncoder passwordEncoder;

	@Override
	public int insert(MemberVO mvo) {
		//아이디가 중복되는지 확인
		//아이디만 주고 DB에서 일치하는 Mvo 객체를 리턴 => 있으면 가입실패 없으면 가입가능
		MemberVO tempMvo = mdao.getUser(mvo.getId());
		if(tempMvo != null) {
			return 0;
		}
		log.info("member service insert in!!");
		// 아이디가 중복되지 않는다면 회원가입 진행.
		// password가 null 이거나 같이 없다면
		if(mvo.getId() == null || mvo.getId().length() == 0) {
			return 0;
		}
		if(mvo.getPw() == null || mvo.getPw().length() == 0) {
			return 0;
		}
		//회원가입 진행 
		//password 암호화하여 기입
		//encode() : 암호화를 진행하는 메서드
		//matches(입력한 비번, 암호화된 비번) : true/ false
		
		
		return 0;
		
	}
	

}
