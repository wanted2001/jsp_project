package com.ezen.test.service;

import java.util.List;

import org.springframework.stereotype.Service;

import com.ezen.test.domain.BoardDTO;
import com.ezen.test.domain.BoardVO;
import com.ezen.test.domain.FileVO;
import com.ezen.test.domain.PagingVO;
import com.ezen.test.repository.BoardDAO;
import com.ezen.test.repository.FileDAO;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequiredArgsConstructor
@Service
public class BoardServiceImpl implements BoardService {

	private final BoardDAO bdao;
	private final FileDAO fdao;

	@Override
	public int insert(BoardDTO bto) {
		log.info("board register service check");
		int isOk = bdao.insert(bto.getBvo());
		// file 처리 -> bno는 아직 없음
		if (bto.getFlist() == null) {
			return isOk;
		} else {
			// 파일 저장
			if (isOk > 0 && bto.getFlist().size() > 0) {
				// bno는 아직 없음 insert를 통해 자동 생성 -> db에 가서 검색 해와야함.
				int bno = bdao.selectBno();
				for (FileVO fvo : bto.getFlist()) {
					fvo.setBno(bno);
					// 파일 저장
					isOk *= fdao.insertFile(fvo);
				}
			}
		}
		return isOk;
	}

	@Override
	public List<BoardVO> getList(PagingVO pgvo) {
		log.info("board list service in!");
		return bdao.getList(pgvo);
	}

	@Override
	public BoardDTO getDetail(int bno) {
		log.info("board detail service in");
		bdao.updateReadCount(bno);
		BoardDTO bto = new BoardDTO();
		BoardVO bvo = bdao.getDetail(bno); // 기존에 처리된 bvo 객체
		bto.setBvo(bvo);
		bto.setFlist(fdao.getFileList(bno)); // bno에 해당하는 모든 파일 리스트 검색
		
		return bto;
	}

	@Override
	public void update(BoardDTO bto) {
		log.info("board update service in");
		//bvo => 보드로 / flist => 파일로
		fdao.
		bdao.update(bto.getBvo());
	}

	@Override
	public void remove(BoardVO bvo) {
		log.info("board delete service in");
		bdao.remove(bvo);

	}

	@Override
	public int totalCount(PagingVO pgvo) {
		log.info("totalCount service in!!");
		return bdao.totalCount(pgvo);
	}

	@Override
	public int removeFile(String uuid) {
		
		return fdao.removeFile(uuid);
	}
}
